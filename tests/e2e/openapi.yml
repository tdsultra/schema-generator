openapi: 3.0.3
info:
    title: API Platform's demo
    description: |-
        This is a demo application of the [API Platform](https://api-platform.com) framework.
        [Its source code](https://github.com/api-platform/demo) includes various examples, check it out!
        You may also be interested by [the GraphQL entrypoint](/graphql).
        [A PWA](/) and [an admin](/admin) are consuming this API.
    version: 1.0.0
servers:
    - url: /
      description: ''
paths:
    /books:
        get:
            operationId: getBookCollection
            tags:
                - Book
            responses:
                '200':
                    description: Book collection
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    hydra:member:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Book.jsonld-book.read'
                                    hydra:totalItems:
                                        type: integer
                                        minimum: 0
                                    hydra:view:
                                        type: object
                                        properties:
                                            '@id':
                                                type: string
                                                format: iri-reference
                                            '@type':
                                                type: string
                                            hydra:first:
                                                type: string
                                                format: iri-reference
                                            hydra:last:
                                                type: string
                                                format: iri-reference
                                            hydra:previous:
                                                type: string
                                                format: iri-reference
                                            hydra:next:
                                                type: string
                                                format: iri-reference
                                    hydra:search:
                                        type: object
                                        properties:
                                            '@type':
                                                type: string
                                            hydra:template:
                                                type: string
                                            hydra:variableRepresentation:
                                                type: string
                                            hydra:mapping:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        '@type':
                                                            type: string
                                                        variable:
                                                            type: string
                                                        property:
                                                            type: string
                                                            nullable: true
                                                        required:
                                                            type: boolean
                                required:
                                    - hydra:member
                        application/hal+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
                        application/vnd.api+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
                        application/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
                        text/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
                        application/x-yaml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
                        text/csv:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
                        text/html:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Book-book.read'
            summary: Retrieves the collection of Book resources.
            description: Retrieves the collection of Book resources.
            parameters:
                - name: page
                  in: query
                  description: The collection page number
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: integer
                      default: 1
                  style: form
                  explode: false
                  allowReserved: false
                - name: archived
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: boolean
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[id]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[title]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[author]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[isbn]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[publicationDate]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: properties[]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: array
                      items:
                          type: string
                  style: form
                  explode: true
                  allowReserved: false
                - name: title
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                  style: form
                  explode: false
                  allowReserved: false
                - name: author
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                  style: form
                  explode: false
                  allowReserved: false
            deprecated: false
        post:
            operationId: postBookCollection
            tags:
                - Book
            responses:
                '201':
                    description: Book resource created
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Book.jsonld-book.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                    links:
                        GetBookItem:
                            operationId: getBookItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /books/{id}`.
                '400':
                    description: Invalid input
                '422':
                    description: Unprocessable entity
            summary: Creates a Book resource.
            description: Creates a Book resource.
            parameters: []
            requestBody:
                description: The new Book resource
                content:
                    application/ld+json:
                        schema:
                            $ref: '#/components/schemas/Book.jsonld'
                    application/hal+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/xml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/x-yaml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/csv:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/html:
                        schema:
                            $ref: '#/components/schemas/Book'
                required: true
            deprecated: false
        parameters: []
    /books/{id}:
        get:
            operationId: getBookItem
            tags:
                - Book
            responses:
                '200':
                    description: Book resource
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Book.jsonld-book.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                '404':
                    description: Resource not found
            summary: Retrieves a Book resource.
            description: Retrieves a Book resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            deprecated: false
        put:
            operationId: putBookItem
            tags:
                - Book
            responses:
                '200':
                    description: Book resource updated
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Book.jsonld-book.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                    links:
                        GetBookItem:
                            operationId: getBookItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /books/{id}`.
                '400':
                    description: Invalid input
                '404':
                    description: Resource not found
                '422':
                    description: Unprocessable entity
            summary: Replaces the Book resource.
            description: Replaces the Book resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            requestBody:
                description: The updated Book resource
                content:
                    application/ld+json:
                        schema:
                            $ref: '#/components/schemas/Book.jsonld'
                    application/hal+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/xml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/x-yaml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/csv:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/html:
                        schema:
                            $ref: '#/components/schemas/Book'
                required: true
            deprecated: false
        delete:
            operationId: deleteBookItem
            tags:
                - Book
            responses:
                '204':
                    description: Book resource deleted
                '404':
                    description: Resource not found
            summary: Removes the Book resource.
            description: Removes the Book resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            deprecated: false
        patch:
            operationId: patchBookItem
            tags:
                - Book
            responses:
                '200':
                    description: Book resource updated
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Book.jsonld-book.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Book-book.read'
                    links:
                        GetBookItem:
                            operationId: getBookItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /books/{id}`.
                '400':
                    description: Invalid input
                '404':
                    description: Resource not found
                '422':
                    description: Unprocessable entity
            summary: Updates the Book resource.
            description: Updates the Book resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            requestBody:
                description: The updated Book resource
                content:
                    application/merge-patch+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                required: true
            deprecated: false
        parameters: []
    /books/{id}/generate-cover:
        put:
            operationId: generate_coverBookItem
            tags:
                - Book
            responses:
                '204':
                    description: Book resource updated
                    content:
                        application/ld+json:
                            schema: {}
                        application/hal+json:
                            schema: {}
                        application/vnd.api+json:
                            schema: {}
                        application/json:
                            schema: {}
                        application/xml:
                            schema: {}
                        text/xml:
                            schema: {}
                        application/x-yaml:
                            schema: {}
                        text/csv:
                            schema: {}
                        text/html:
                            schema: {}
                    links:
                        GetBookItem:
                            operationId: getBookItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /books/{id}`.
                '400':
                    description: Invalid input
                '404':
                    description: Resource not found
                '422':
                    description: Unprocessable entity
            summary: Replaces the Book resource.
            description: Replaces the Book resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            requestBody:
                description: The updated Book resource
                content:
                    application/ld+json:
                        schema:
                            $ref: '#/components/schemas/Book.jsonld'
                    application/hal+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/xml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    application/x-yaml:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/csv:
                        schema:
                            $ref: '#/components/schemas/Book'
                    text/html:
                        schema:
                            $ref: '#/components/schemas/Book'
                required: true
            deprecated: false
        parameters: []
    /books/{id}/reviews:
        get:
            operationId: api_books_reviews_get_subresourceBookSubresource
            tags:
                - Review
                - Book
            responses:
                '200':
                    description: Book resource
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    hydra:member:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Review.jsonld-review.read'
                                    hydra:totalItems:
                                        type: integer
                                        minimum: 0
                                    hydra:view:
                                        type: object
                                        properties:
                                            '@id':
                                                type: string
                                                format: iri-reference
                                            '@type':
                                                type: string
                                            hydra:first:
                                                type: string
                                                format: iri-reference
                                            hydra:last:
                                                type: string
                                                format: iri-reference
                                            hydra:previous:
                                                type: string
                                                format: iri-reference
                                            hydra:next:
                                                type: string
                                                format: iri-reference
                                    hydra:search:
                                        type: object
                                        properties:
                                            '@type':
                                                type: string
                                            hydra:template:
                                                type: string
                                            hydra:variableRepresentation:
                                                type: string
                                            hydra:mapping:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        '@type':
                                                            type: string
                                                        variable:
                                                            type: string
                                                        property:
                                                            type: string
                                                            nullable: true
                                                        required:
                                                            type: boolean
                                required:
                                    - hydra:member
                        application/hal+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/vnd.api+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        text/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/x-yaml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        text/csv:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        text/html:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
            summary: Retrieves a Book resource.
            description: Retrieves a Book resource.
            parameters:
                - name: id
                  in: path
                  description: Book identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
                - name: page
                  in: query
                  description: The collection page number
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: integer
                      default: 1
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[id]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[publicationDate]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: book
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                  style: form
                  explode: false
                  allowReserved: false
                - name: book[]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: array
                      items:
                          type: string
                  style: form
                  explode: true
                  allowReserved: false
            deprecated: false
        parameters: []
    /parchments:
        get:
            operationId: getParchmentCollection
            tags:
                - Parchment
            responses:
                '200':
                    description: Parchment collection
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    hydra:member:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Parchment.jsonld'
                                    hydra:totalItems:
                                        type: integer
                                        minimum: 0
                                    hydra:view:
                                        type: object
                                        properties:
                                            '@id':
                                                type: string
                                                format: iri-reference
                                            '@type':
                                                type: string
                                            hydra:first:
                                                type: string
                                                format: iri-reference
                                            hydra:last:
                                                type: string
                                                format: iri-reference
                                            hydra:previous:
                                                type: string
                                                format: iri-reference
                                            hydra:next:
                                                type: string
                                                format: iri-reference
                                    hydra:search:
                                        type: object
                                        properties:
                                            '@type':
                                                type: string
                                            hydra:template:
                                                type: string
                                            hydra:variableRepresentation:
                                                type: string
                                            hydra:mapping:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        '@type':
                                                            type: string
                                                        variable:
                                                            type: string
                                                        property:
                                                            type: string
                                                            nullable: true
                                                        required:
                                                            type: boolean
                                required:
                                    - hydra:member
                        application/hal+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
                        application/vnd.api+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
                        application/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
                        text/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
                        application/x-yaml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
                        text/csv:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
                        text/html:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Parchment'
            summary: Retrieves the collection of Parchment resources.
            description: Retrieves the collection of Parchment resources.
            parameters:
                - name: page
                  in: query
                  description: The collection page number
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: integer
                      default: 1
                  style: form
                  explode: false
                  allowReserved: false
            deprecated: true
        post:
            operationId: postParchmentCollection
            tags:
                - Parchment
            responses:
                '201':
                    description: Parchment resource created
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Parchment.jsonld'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                    links:
                        GetParchmentItem:
                            operationId: getParchmentItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /parchments/{id}`.
                '400':
                    description: Invalid input
                '422':
                    description: Unprocessable entity
            summary: Creates a Parchment resource.
            description: Creates a Parchment resource.
            parameters: []
            requestBody:
                description: The new Parchment resource
                content:
                    application/ld+json:
                        schema:
                            $ref: '#/components/schemas/Parchment.jsonld'
                    application/hal+json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    text/xml:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/x-yaml:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    text/csv:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    text/html:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                required: true
            deprecated: true
        parameters: []
    /parchments/{id}:
        get:
            operationId: getParchmentItem
            tags:
                - Parchment
            responses:
                '200':
                    description: Parchment resource
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Parchment.jsonld'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                '404':
                    description: Resource not found
            summary: Retrieves a Parchment resource.
            description: Retrieves a Parchment resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            deprecated: true
        put:
            operationId: putParchmentItem
            tags:
                - Parchment
            responses:
                '200':
                    description: Parchment resource updated
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Parchment.jsonld'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                    links:
                        GetParchmentItem:
                            operationId: getParchmentItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /parchments/{id}`.
                '400':
                    description: Invalid input
                '404':
                    description: Resource not found
                '422':
                    description: Unprocessable entity
            summary: Replaces the Parchment resource.
            description: Replaces the Parchment resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            requestBody:
                description: The updated Parchment resource
                content:
                    application/ld+json:
                        schema:
                            $ref: '#/components/schemas/Parchment.jsonld'
                    application/hal+json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    text/xml:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/x-yaml:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    text/csv:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    text/html:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                required: true
            deprecated: true
        delete:
            operationId: deleteParchmentItem
            tags:
                - Parchment
            responses:
                '204':
                    description: Parchment resource deleted
                '404':
                    description: Resource not found
            summary: Removes the Parchment resource.
            description: Removes the Parchment resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            deprecated: true
        patch:
            operationId: patchParchmentItem
            tags:
                - Parchment
            responses:
                '200':
                    description: Parchment resource updated
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Parchment.jsonld'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Parchment'
                    links:
                        GetParchmentItem:
                            operationId: getParchmentItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /parchments/{id}`.
                '400':
                    description: Invalid input
                '404':
                    description: Resource not found
                '422':
                    description: Unprocessable entity
            summary: Updates the Parchment resource.
            description: Updates the Parchment resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            requestBody:
                description: The updated Parchment resource
                content:
                    application/merge-patch+json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Parchment'
                required: true
            deprecated: true
        parameters: []
    /reviews:
        get:
            operationId: getReviewCollection
            tags:
                - Review
            responses:
                '200':
                    description: Review collection
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    hydra:member:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Review.jsonld-review.read'
                                    hydra:totalItems:
                                        type: integer
                                        minimum: 0
                                    hydra:view:
                                        type: object
                                        properties:
                                            '@id':
                                                type: string
                                                format: iri-reference
                                            '@type':
                                                type: string
                                            hydra:first:
                                                type: string
                                                format: iri-reference
                                            hydra:last:
                                                type: string
                                                format: iri-reference
                                            hydra:previous:
                                                type: string
                                                format: iri-reference
                                            hydra:next:
                                                type: string
                                                format: iri-reference
                                    hydra:search:
                                        type: object
                                        properties:
                                            '@type':
                                                type: string
                                            hydra:template:
                                                type: string
                                            hydra:variableRepresentation:
                                                type: string
                                            hydra:mapping:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        '@type':
                                                            type: string
                                                        variable:
                                                            type: string
                                                        property:
                                                            type: string
                                                            nullable: true
                                                        required:
                                                            type: boolean
                                required:
                                    - hydra:member
                        application/hal+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/vnd.api+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        text/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        application/x-yaml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        text/csv:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
                        text/html:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Review-review.read'
            summary: Retrieves the collection of Review resources.
            description: Retrieves the collection of Review resources.
            parameters:
                - name: page
                  in: query
                  description: The collection page number
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: integer
                      default: 1
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[id]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: order[publicationDate]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                  style: form
                  explode: false
                  allowReserved: false
                - name: book
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: string
                  style: form
                  explode: false
                  allowReserved: false
                - name: book[]
                  in: query
                  description: ''
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: array
                      items:
                          type: string
                  style: form
                  explode: true
                  allowReserved: false
            deprecated: false
        post:
            operationId: postReviewCollection
            tags:
                - Review
            responses:
                '201':
                    description: Review resource created
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Review.jsonld-review.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                    links:
                        GetReviewItem:
                            operationId: getReviewItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /reviews/{id}`.
                '400':
                    description: Invalid input
                '422':
                    description: Unprocessable entity
            summary: Creates a Review resource.
            description: Creates a Review resource.
            parameters: []
            requestBody:
                description: The new Review resource
                content:
                    application/ld+json:
                        schema:
                            $ref: '#/components/schemas/Review.jsonld-review.write'
                    application/hal+json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    text/xml:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/x-yaml:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    text/csv:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    text/html:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                required: true
            deprecated: false
        parameters: []
    /reviews/{id}:
        get:
            operationId: getReviewItem
            tags:
                - Review
            responses:
                '200':
                    description: Review resource
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Review.jsonld-review.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                '404':
                    description: Resource not found
            summary: Retrieves a Review resource.
            description: Retrieves a Review resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            deprecated: false
        put:
            operationId: putReviewItem
            tags:
                - Review
            responses:
                '200':
                    description: Review resource updated
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Review.jsonld-review.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                    links:
                        GetReviewItem:
                            operationId: getReviewItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /reviews/{id}`.
                '400':
                    description: Invalid input
                '404':
                    description: Resource not found
                '422':
                    description: Unprocessable entity
            summary: Replaces the Review resource.
            description: Replaces the Review resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            requestBody:
                description: The updated Review resource
                content:
                    application/ld+json:
                        schema:
                            $ref: '#/components/schemas/Review.jsonld-review.write'
                    application/hal+json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    text/xml:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/x-yaml:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    text/csv:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    text/html:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                required: true
            deprecated: false
        delete:
            operationId: deleteReviewItem
            tags:
                - Review
            responses:
                '204':
                    description: Review resource deleted
                '404':
                    description: Resource not found
            summary: Removes the Review resource.
            description: Removes the Review resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            deprecated: false
        patch:
            operationId: patchReviewItem
            tags:
                - Review
            responses:
                '200':
                    description: Review resource updated
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Review.jsonld-review.read'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/Review-review.read'
                    links:
                        GetReviewItem:
                            operationId: getReviewItem
                            parameters:
                                id: $response.body#/id
                            description: The `id` value returned in the response can be used as the `id` parameter in `GET /reviews/{id}`.
                '400':
                    description: Invalid input
                '404':
                    description: Resource not found
                '422':
                    description: Unprocessable entity
            summary: Updates the Review resource.
            description: Updates the Review resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            requestBody:
                description: The updated Review resource
                content:
                    application/merge-patch+json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/Review-review.write'
                required: true
            deprecated: false
        parameters: []
    /stats:
        get:
            operationId: get
            tags:
                - Stats
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    books_count:
                                        type: integer
                                        example: 997
                                    topbooks_count:
                                        type: integer
                                        example: 101
            summary: Retrieves the number of books and top books (legacy endpoint).
            description: ''
            parameters: []
            deprecated: false
        parameters: []
    /top_books:
        get:
            operationId: getTopBookCollection
            tags:
                - TopBook
            responses:
                '200':
                    description: TopBook collection
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    hydra:member:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/TopBook.jsonld'
                                    hydra:totalItems:
                                        type: integer
                                        minimum: 0
                                    hydra:view:
                                        type: object
                                        properties:
                                            '@id':
                                                type: string
                                                format: iri-reference
                                            '@type':
                                                type: string
                                            hydra:first:
                                                type: string
                                                format: iri-reference
                                            hydra:last:
                                                type: string
                                                format: iri-reference
                                            hydra:previous:
                                                type: string
                                                format: iri-reference
                                            hydra:next:
                                                type: string
                                                format: iri-reference
                                    hydra:search:
                                        type: object
                                        properties:
                                            '@type':
                                                type: string
                                            hydra:template:
                                                type: string
                                            hydra:variableRepresentation:
                                                type: string
                                            hydra:mapping:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        '@type':
                                                            type: string
                                                        variable:
                                                            type: string
                                                        property:
                                                            type: string
                                                            nullable: true
                                                        required:
                                                            type: boolean
                                required:
                                    - hydra:member
                        application/hal+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
                        application/vnd.api+json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
                        application/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
                        text/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
                        application/x-yaml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
                        text/csv:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
                        text/html:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TopBook'
            summary: Retrieves the collection of TopBook resources.
            description: Retrieves the collection of TopBook resources.
            parameters:
                - name: page
                  in: query
                  description: The collection page number
                  required: false
                  deprecated: false
                  allowEmptyValue: true
                  schema:
                      type: integer
                      default: 1
                  style: form
                  explode: false
                  allowReserved: false
            deprecated: false
        parameters: []
    /top_books/{id}:
        get:
            operationId: getTopBookItem
            tags:
                - TopBook
            responses:
                '200':
                    description: TopBook resource
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TopBook.jsonld'
                        application/hal+json:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                        application/x-yaml:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/TopBook'
                '404':
                    description: Resource not found
            summary: Retrieves a TopBook resource.
            description: Retrieves a TopBook resource.
            parameters:
                - name: id
                  in: path
                  description: Resource identifier
                  required: true
                  deprecated: false
                  allowEmptyValue: false
                  schema:
                      type: string
                  style: simple
                  explode: false
                  allowReserved: false
            deprecated: false
        parameters: []
components:
    schemas:
        Book:
            type: object
            description: ''
            externalDocs:
                url: https://schema.org/Book
            properties:
                isbn:
                    description: The ISBN of the book.
                    externalDocs:
                        url: https://schema.org/isbn
                    type: string
                    nullable: true
                title:
                    description: The title of the book.
                    externalDocs:
                        url: https://schema.org/name
                    type: string
                description:
                    description: A description of the item.
                    externalDocs:
                        url: https://schema.org/description
                    type: string
                author:
                    description: The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
                    externalDocs:
                        url: https://schema.org/author
                    type: string
                publicationDate:
                    description: The date on which the CreativeWork was created or the item was added to a DataFeed.
                    externalDocs:
                        url: https://schema.org/dateCreated
                    type: string
                    format: date-time
                reviews:
                    description: The book's reviews.
                    externalDocs:
                        url: https://schema.org/reviews
                    type: array
                    items:
                        $ref: '#/components/schemas/Review'
                cover:
                    writeOnly: true
                    description: The book's cover base64 encoded.
                    type: string
                    nullable: true
                archivedAt:
                    writeOnly: true
                    type: string
                    format: date-time
                    nullable: true
            required:
                - title
                - description
                - author
                - publicationDate
        Book-book.read:
            type: object
            description: ''
            externalDocs:
                url: https://schema.org/Book
            properties:
                isbn:
                    description: The ISBN of the book.
                    externalDocs:
                        url: https://schema.org/isbn
                    type: string
                    nullable: true
                title:
                    description: The title of the book.
                    externalDocs:
                        url: https://schema.org/name
                    type: string
                description:
                    description: A description of the item.
                    externalDocs:
                        url: https://schema.org/description
                    type: string
                author:
                    description: The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
                    externalDocs:
                        url: https://schema.org/author
                    type: string
                publicationDate:
                    description: The date on which the CreativeWork was created or the item was added to a DataFeed.
                    externalDocs:
                        url: https://schema.org/dateCreated
                    type: string
                    format: date-time
                reviews:
                    description: The book's reviews.
                    externalDocs:
                        url: https://schema.org/reviews
                    type: array
                    items:
                        $ref: '#/components/schemas/Review-book.read'
            required:
                - title
                - description
                - author
                - publicationDate
        Book-review.read:
            type: object
            description: ''
            externalDocs:
                url: https://schema.org/Book
            required:
                - title
            properties:
                title:
                    description: The title of the book.
                    externalDocs:
                        url: https://schema.org/name
                    type: string
        Book.jsonld:
            type: object
            description: ''
            externalDocs:
                url: https://schema.org/Book
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                isbn:
                    description: The ISBN of the book.
                    externalDocs:
                        url: https://schema.org/isbn
                    type: string
                    nullable: true
                title:
                    description: The title of the book.
                    externalDocs:
                        url: https://schema.org/name
                    type: string
                description:
                    description: A description of the item.
                    externalDocs:
                        url: https://schema.org/description
                    type: string
                author:
                    description: The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
                    externalDocs:
                        url: https://schema.org/author
                    type: string
                publicationDate:
                    description: The date on which the CreativeWork was created or the item was added to a DataFeed.
                    externalDocs:
                        url: https://schema.org/dateCreated
                    type: string
                    format: date-time
                reviews:
                    description: The book's reviews.
                    externalDocs:
                        url: https://schema.org/reviews
                    type: array
                    items:
                        $ref: '#/components/schemas/Review.jsonld'
                cover:
                    writeOnly: true
                    description: The book's cover base64 encoded.
                    type: string
                    nullable: true
                archivedAt:
                    writeOnly: true
                    type: string
                    format: date-time
                    nullable: true
            required:
                - title
                - description
                - author
                - publicationDate
        Book.jsonld-book.read:
            type: object
            description: ''
            externalDocs:
                url: https://schema.org/Book
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                isbn:
                    description: The ISBN of the book.
                    externalDocs:
                        url: https://schema.org/isbn
                    type: string
                    nullable: true
                title:
                    description: The title of the book.
                    externalDocs:
                        url: https://schema.org/name
                    type: string
                description:
                    description: A description of the item.
                    externalDocs:
                        url: https://schema.org/description
                    type: string
                author:
                    description: The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
                    externalDocs:
                        url: https://schema.org/author
                    type: string
                publicationDate:
                    description: The date on which the CreativeWork was created or the item was added to a DataFeed.
                    externalDocs:
                        url: https://schema.org/dateCreated
                    type: string
                    format: date-time
                reviews:
                    description: The book's reviews.
                    externalDocs:
                        url: https://schema.org/reviews
                    type: array
                    items:
                        $ref: '#/components/schemas/Review.jsonld-book.read'
            required:
                - title
                - description
                - author
                - publicationDate
        Book.jsonld-review.read:
            type: object
            description: ''
            externalDocs:
                url: https://schema.org/Book
            required:
                - title
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                title:
                    description: The title of the book.
                    externalDocs:
                        url: https://schema.org/name
                    type: string
        Parchment:
            type: object
            deprecated: true
            properties:
                id:
                    readOnly: true
                    type: string
                    format: uuid
                    nullable: true
                title:
                    description: The title of the book.
                    type: string
                description:
                    description: A description of the item.
                    type: string
            required:
                - title
                - description
        Parchment.jsonld:
            type: object
            deprecated: true
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                id:
                    readOnly: true
                    type: string
                    format: uuid
                    nullable: true
                title:
                    description: The title of the book.
                    type: string
                description:
                    description: A description of the item.
                    type: string
            required:
                - title
                - description
        Review:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
                - rating
                - book
            properties:
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
                rating:
                    description: A rating.
                    type: integer
                letter:
                    description: 'DEPRECATED (use rating now): A letter to rate the book.'
                    deprecated: true
                    type: string
                    nullable: true
                book:
                    description: The item that is being reviewed/rated.
                    externalDocs:
                        url: http://schema.org/itemReviewed
                    $ref: '#/components/schemas/Book'
                author:
                    description: The author of the review.
                    externalDocs:
                        url: http://schema.org/author
                    type: string
                    nullable: true
                publicationDate:
                    description: Publication date of the review.
                    type: string
                    format: date-time
                    nullable: true
        Review-book.read:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
            properties:
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
        Review-review.read:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
                - rating
                - book
            properties:
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
                rating:
                    description: A rating.
                    type: integer
                letter:
                    description: 'DEPRECATED (use rating now): A letter to rate the book.'
                    deprecated: true
                    type: string
                    nullable: true
                book:
                    description: The item that is being reviewed/rated.
                    externalDocs:
                        url: http://schema.org/itemReviewed
                    $ref: '#/components/schemas/Book-review.read'
                author:
                    description: The author of the review.
                    externalDocs:
                        url: http://schema.org/author
                    type: string
                    nullable: true
                publicationDate:
                    description: Publication date of the review.
                    type: string
                    format: date-time
                    nullable: true
        Review-review.write:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
                - rating
                - book
            properties:
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
                rating:
                    description: A rating.
                    type: integer
                letter:
                    description: 'DEPRECATED (use rating now): A letter to rate the book.'
                    deprecated: true
                    type: string
                    nullable: true
                book:
                    description: The item that is being reviewed/rated.
                    externalDocs:
                        url: http://schema.org/itemReviewed
                    type: string
                    format: iri-reference
                author:
                    description: The author of the review.
                    externalDocs:
                        url: http://schema.org/author
                    type: string
                    nullable: true
                publicationDate:
                    description: Publication date of the review.
                    type: string
                    format: date-time
                    nullable: true
        Review.jsonld:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
                - rating
                - book
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
                rating:
                    description: A rating.
                    type: integer
                letter:
                    description: 'DEPRECATED (use rating now): A letter to rate the book.'
                    deprecated: true
                    type: string
                    nullable: true
                book:
                    description: The item that is being reviewed/rated.
                    externalDocs:
                        url: http://schema.org/itemReviewed
                    $ref: '#/components/schemas/Book.jsonld'
                author:
                    description: The author of the review.
                    externalDocs:
                        url: http://schema.org/author
                    type: string
                    nullable: true
                publicationDate:
                    description: Publication date of the review.
                    type: string
                    format: date-time
                    nullable: true
        Review.jsonld-book.read:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
        Review.jsonld-review.read:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
                - rating
                - book
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
                rating:
                    description: A rating.
                    type: integer
                letter:
                    description: 'DEPRECATED (use rating now): A letter to rate the book.'
                    deprecated: true
                    type: string
                    nullable: true
                book:
                    description: The item that is being reviewed/rated.
                    externalDocs:
                        url: http://schema.org/itemReviewed
                    $ref: '#/components/schemas/Book.jsonld-review.read'
                author:
                    description: The author of the review.
                    externalDocs:
                        url: http://schema.org/author
                    type: string
                    nullable: true
                publicationDate:
                    description: Publication date of the review.
                    type: string
                    format: date-time
                    nullable: true
        Review.jsonld-review.write:
            type: object
            description: A review of an item - for example, of a restaurant, movie, or store.
            externalDocs:
                url: http://schema.org/Review
            required:
                - body
                - rating
                - book
            properties:
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                body:
                    description: The actual body of the review.
                    externalDocs:
                        url: http://schema.org/reviewBody
                    type: string
                rating:
                    description: A rating.
                    type: integer
                letter:
                    description: 'DEPRECATED (use rating now): A letter to rate the book.'
                    deprecated: true
                    type: string
                    nullable: true
                book:
                    description: The item that is being reviewed/rated.
                    externalDocs:
                        url: http://schema.org/itemReviewed
                    type: string
                    format: iri-reference
                author:
                    description: The author of the review.
                    externalDocs:
                        url: http://schema.org/author
                    type: string
                    nullable: true
                publicationDate:
                    description: Publication date of the review.
                    type: string
                    format: date-time
                    nullable: true
        TopBook:
            type: object
            description: This entity represents a "most borrowed book" in a given a given French library.
            properties:
                id:
                    type: integer
                title:
                    type: string
                author:
                    type: string
                part:
                    type: string
                place:
                    type: string
                borrowCount:
                    type: integer
        TopBook.jsonld:
            type: object
            description: This entity represents a "most borrowed book" in a given a given French library.
            properties:
                '@id':
                    readOnly: true
                    type: string
                '@type':
                    readOnly: true
                    type: string
                '@context':
                    readOnly: true
                    oneOf:
                        - type: string
                        - type: object
                          properties:
                              '@vocab':
                                  type: string
                              hydra:
                                  type: string
                                  enum:
                                      - http://www.w3.org/ns/hydra/core#
                          required:
                              - '@vocab'
                              - hydra
                          additionalProperties: true
                id:
                    type: integer
                title:
                    type: string
                author:
                    type: string
                part:
                    type: string
                place:
                    type: string
                borrowCount:
                    type: integer
    responses: {}
    parameters: {}
    examples: {}
    requestBodies: {}
    headers: {}
    securitySchemes:
        apiKey:
            type: apiKey
            description: Value for the Authorization header parameter.
            name: Authorization
            in: header
security:
    - apiKey: []
tags: []
